<%- include('partials/header') %>

<div class="container">
  <div class="payment-success-container" id="loadingState">
    <div class="processing-animation">
      <i class="fas fa-circle-notch fa-spin"></i>
    </div>
    <h1>Processing Your Payment</h1>
    <p>Please wait while we confirm your payment with PayPal...</p>
  </div>

  <div class="payment-success-container hidden" id="successState">
    <div class="success-animation">
      <i class="fas fa-check-circle"></i>
    </div>
    <h1>Payment Successful!</h1>
    <p>Your order has been confirmed and is being processed.</p>
    
    <div class="order-details">
      <div class="detail-row">
        <strong>Order ID:</strong>
        <span id="orderId">-</span>
      </div>
      <div class="detail-row">
        <strong>Payment Status:</strong>
        <span class="badge success">Completed</span>
      </div>
      <div class="detail-row">
        <strong>Amount Paid:</strong>
        <span id="amountPaid">-</span>
      </div>
    </div>
    
    <div class="next-steps">
      <h3><i class="fas fa-clipboard-list"></i> Next Steps</h3>
      <ul>
        <li>The seller will be notified about your purchase</li>
        <li>You will receive an email with your order details</li>
        <li>You can track your order in your account dashboard</li>
      </ul>
    </div>
    
    <div class="action-buttons">
      <a href="/user/orders" class="primary-button">
        <i class="fas fa-box"></i> View Your Orders
      </a>
      <a href="/" class="secondary-button">
        <i class="fas fa-home"></i> Back to Home
      </a>
    </div>
  </div>

  <div class="payment-success-container hidden" id="errorState">
    <div class="error-animation">
      <i class="fas fa-exclamation-circle"></i>
    </div>
    <h1>Payment Processing Issue</h1>
    <p>We encountered an issue while confirming your payment.</p>
    <p id="errorMessage" class="error-message">Error details will appear here.</p>
    
    <div class="action-buttons">
      <a href="/user/orders" class="primary-button">
        <i class="fas fa-box"></i> Check Your Orders
      </a>
      <a href="/" class="secondary-button">
        <i class="fas fa-home"></i> Back to Home
      </a>
      <button id="retryButton" class="retry-button">
        <i class="fas fa-redo"></i> Retry Payment Verification
      </button>
    </div>
  </div>
</div>

<style>
  .payment-success-container {
    background: white;
    border-radius: 10px;
    box-shadow: 0 5px 20px rgba(0,0,0,0.1);
    padding: 40px;
    text-align: center;
    margin: 50px auto;
    max-width: 700px;
    animation: fadeIn 0.5s ease-in-out;
  }
  
  .processing-animation {
    font-size: 4rem;
    color: #3498db;
    margin-bottom: 20px;
  }
  
  .success-animation {
    font-size: 5rem;
    color: #27ae60;
    margin-bottom: 20px;
    animation: bounceIn 1s;
  }
  
  .error-animation {
    font-size: 5rem;
    color: #e74c3c;
    margin-bottom: 20px;
    animation: pulse 2s infinite;
  }
  
  .payment-success-container h1 {
    color: #2c3e50;
    margin-bottom: 15px;
  }
  
  .payment-success-container p {
    color: #7f8c8d;
    font-size: 1.1rem;
    margin-bottom: 25px;
  }
  
  .order-details {
    background: #f9f9fa;
    border-radius: 8px;
    padding: 20px;
    margin: 25px 0;
    text-align: left;
    border-left: 4px solid #3498db;
  }
  
  .detail-row {
    display: flex;
    justify-content: space-between;
    margin-bottom: 12px;
    padding-bottom: 12px;
    border-bottom: 1px solid #eee;
  }
  
  .detail-row:last-child {
    margin-bottom: 0;
    padding-bottom: 0;
    border-bottom: none;
  }
  
  .badge {
    display: inline-block;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.9rem;
    font-weight: 600;
    color: white;
  }
  
  .badge.success {
    background: #27ae60;
  }
  
  .next-steps {
    background: #f9f9fa;
    border-radius: 8px;
    padding: 20px;
    margin: 25px 0;
    text-align: left;
    border-left: 4px solid #27ae60;
  }
  
  .next-steps h3 {
    display: flex;
    align-items: center;
    gap: 10px;
    margin-top: 0;
    color: #2c3e50;
  }
  
  .next-steps h3 i {
    color: #27ae60;
  }
  
  .next-steps ul {
    margin: 15px 0 0 0;
    padding-left: 20px;
  }
  
  .next-steps li {
    margin-bottom: 10px;
  }
  
  .action-buttons {
    display: flex;
    justify-content: center;
    gap: 15px;
    margin-top: 30px;
    flex-wrap: wrap;
  }
  
  .primary-button, .secondary-button, .retry-button {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 12px 25px;
    border-radius: 6px;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.3s;
    cursor: pointer;
    font-size: 1rem;
  }
  
  .primary-button {
    background: #27ae60;
    color: white;
    border: none;
  }
  
  .primary-button:hover {
    background: #219653;
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(39, 174, 96, 0.3);
  }
  
  .secondary-button {
    background: #f8f9fa;
    color: #333;
    border: 1px solid #ddd;
  }
  
  .secondary-button:hover {
    background: #e9ecef;
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(0,0,0,0.1);
  }
  
  .retry-button {
    background: #3498db;
    color: white;
    border: none;
  }
  
  .retry-button:hover {
    background: #2980b9;
    transform: translateY(-3px);
    box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
  }
  
  .error-message {
    background: #fee;
    color: #e74c3c;
    padding: 15px;
    border-radius: 6px;
    margin: 20px 0;
    font-weight: 500;
  }
  
  .hidden {
    display: none;
  }
  
  @keyframes bounceIn {
    0% { transform: scale(0); opacity: 0; }
    50% { transform: scale(1.2); }
    100% { transform: scale(1); opacity: 1; }
  }
  
  @keyframes pulse {
    0% { opacity: 0.7; }
    50% { opacity: 1; }
    100% { opacity: 0.7; }
  }
  
  @keyframes fadeIn {
    from { opacity: 0; }
    to { opacity: 1; }
  }
  
  @media (max-width: 768px) {
    .payment-success-container {
      padding: 25px;
      margin: 30px 15px;
    }
    
    .action-buttons {
      flex-direction: column;
    }
    
    .primary-button, .secondary-button, .retry-button {
      width: 100%;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Extract token from URL
    const urlParams = new URLSearchParams(window.location.search);
    const token = urlParams.get('token');
    const payerId = urlParams.get('PayerID');
    
    if (!token) {
      showErrorState('No payment token found in the URL. Please try your purchase again.');
      return;
    }
    
    console.log('Payment Token:', token);
    console.log('Payer ID:', payerId);
    
    // Call the capture payment API
    capturePayment(token);
    
    // Add retry button functionality
    document.getElementById('retryButton').addEventListener('click', function() {
      showLoadingState();
      capturePayment(token);
    });
  });
  
  async function capturePayment(token) {
    try {
      // Call our backend API to capture the payment
      const response = await fetch(`/api/v1/capture?token=${token}`, {
        method: 'GET',
        headers: {
          'Accept': 'application/json'
        }
      });
      
      if (!response.ok) {
        const errorText = await response.text();
        console.error('Capture API Error Response:', errorText);
        throw new Error(`API responded with status ${response.status}: ${errorText}`);
      }
      
      const result = await response.json();
      console.log('Capture API Response:', result);
      
      if (result && result.statusCode !== 'error') {
        // Show success state
        const orderData = result.data || {};
        document.getElementById('orderId').textContent = orderData._id || token;
        
        const paymentInfo = orderData.paymentInfo || {};
        const amount = paymentInfo.amount || '0';
        const currency = paymentInfo.currency || 'USD';
        document.getElementById('amountPaid').textContent = `${currency} ${amount}`;
        
        showSuccessState();
      } else {
        // Show error state
        showErrorState(result.message || 'Failed to confirm payment. Please contact customer support.');
      }
    } catch (error) {
      console.error('Error capturing payment:', error);
      showErrorState('An error occurred while processing your payment: ' + error.message);
    }
  }
  
  function showLoadingState() {
    document.getElementById('loadingState').classList.remove('hidden');
    document.getElementById('successState').classList.add('hidden');
    document.getElementById('errorState').classList.add('hidden');
  }
  
  function showSuccessState() {
    document.getElementById('loadingState').classList.add('hidden');
    document.getElementById('successState').classList.remove('hidden');
    document.getElementById('errorState').classList.add('hidden');
  }
  
  function showErrorState(message) {
    document.getElementById('loadingState').classList.add('hidden');
    document.getElementById('successState').classList.add('hidden');
    document.getElementById('errorState').classList.remove('hidden');
    document.getElementById('errorMessage').textContent = message;
  }
</script>

<%- include('partials/footer') %>
